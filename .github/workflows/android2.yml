name: Pre-release

concurrency:
  group: pre-release-${{ github.workflow }}
  cancel-in-progress: true

on:
  push:
    branches: ["compiler"]
    paths: ["**/.github/**", "changelog.md"]
  workflow_dispatch:
    inputs:
      withDeploy:
        type: choice
        default: 'false'
        description: with deploy
        required: true
        options:
          - 'true'
          - 'false'
  workflow_call:
     secrets:
       ACCESS_TOKEN:
         required: true
  schedule:
  # https://crontab.guru/#0_0_*/5_*_*
    - cron: '0 0 */5 * *'
jobs:
  build:
    name: build apk
    runs-on: ubuntu-latest
    env:
      # The name of the main module repository
      main_project_module: app
    steps:
      - name: dump inputs with deployment
        run: |
          echo "value ${{ inputs.withDeploy }}"
          echo "is false ${{ inputs.withDeploy == 'false' }}"
          echo "is true ${{ inputs.withDeploy == 'true' }}"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: dimaslanjaka/dev
          ref: android-traffic
          token: ${{ secrets.ACCESS_TOKEN }}
          lfs: 'true'
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 19
          distribution: oracle
      - name: Setup cache gradle wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            $HOME/.m2/repository
            ~/.m2/repository
            ./.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle', '**/builddict.txt') }}
          restore-keys: |
            gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle', '**/builddict.txt') }}
            gradle-${{ runner.os }}
      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            app/build
            manager/build
            library/build
          key: gradle-${{ runner.os }}-build-${{ hashFiles('**/*.gradle', '**/builddict.txt') }}
          restore-keys: |
            gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle', '**/builddict.txt') }}
            gradle-${{ runner.os }}-build
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Generate dictionaries
        run: ./gradlew genDict --gradle-user-home .gradle -Dorg.gradle.jvmargs="-Xmx2000m -Xms300m -XX:MaxMetaspaceSize=256m -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=build/heap" -Porg.gradle.parallel=true
      - name: build Aarch64
        run: bash ./gradlew assembleAarch64Release --gradle-user-home .gradle -Dorg.gradle.jvmargs="-Xmx2000m -Xms300m -XX:MaxMetaspaceSize=256m -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=build/heap" -Porg.gradle.parallel=true
      - name: build ARM
        run: bash ./gradlew assembleArmRelease --gradle-user-home .gradle -Dorg.gradle.jvmargs="-Xmx2000m -Xms300m -XX:MaxMetaspaceSize=256m -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=build/heap" -Porg.gradle.parallel=true
      - name: build X86
        run: bash ./gradlew assembleX86Release --gradle-user-home .gradle -Dorg.gradle.jvmargs="-Xmx2000m -Xms300m -XX:MaxMetaspaceSize=256m -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=build/heap" -Porg.gradle.parallel=true
      - name: build X86_64
        run: bash ./gradlew assembleX86_64Release --gradle-user-home .gradle -Dorg.gradle.jvmargs="-Xmx2000m -Xms300m -XX:MaxMetaspaceSize=256m -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=build/heap" -Porg.gradle.parallel=true
      - name: build manager
        run: bash ./gradlew :manager:assembleRelease --gradle-user-home .gradle -Dorg.gradle.jvmargs="-Xmx2000m -Xms300m -XX:MaxMetaspaceSize=256m -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=build/heap" -Porg.gradle.parallel=true
      - name: aarch64
        uses: actions/upload-artifact@v4
        with:
          path: app/build/outputs/apk/aarch64/release/exchanger-release.apk
          name: exchanger-android-aarch64.zip
      - name: x86_64
        uses: actions/upload-artifact@v4
        with:
          path: app/build/outputs/apk/x86_64/release/exchanger-release.apk
          name: exchanger-android-x86_64.zip
      - name: x86
        uses: actions/upload-artifact@v4
        with:
          path: app/build/outputs/apk/x86/release/exchanger-release.apk
          name: exchanger-android-x86.zip
      - name: arm
        uses: actions/upload-artifact@v4
        with:
          path: app/build/outputs/apk/arm/release/exchanger-release.apk
          name: exchanger-android-arm.zip
      - name: manager
        uses: actions/upload-artifact@v4
        with:
          path: manager/build/outputs/apk/release/manager-release.apk
          name: manager-android.zip
      - name: Upload github pages artifact
        if: ${{ inputs.withDeploy == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: |
            release/
            changelog.md
            readme.md
        env:
          ACTIONS_STEP_DEBUG: true
      - name: kill java processes
        continue-on-error: true
        run: |
           killall -9 java

  deploy:
    if: ${{ inputs.withDeploy == 'true' }}
    needs: build
    name: deploy to github pages
    runs-on: windows-latest
    steps:
      - run: rm -rf release-repo
        shell: bash
      - name: Checkout pages compiler
        uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: dimaslanjaka/android-traffic-exchange
          ref: compiler
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: setup github
        run: |
          git config --global user.name 'dimaslanjaka'
          git config --global user.email 'dimaslanjaka@gmail.com'
          git config core.eol lf
          git config core.autocrlf input

      - name: Checkout pages deployment
        uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: dimaslanjaka/android-traffic-exchange
          ref: master
          token: ${{ secrets.ACCESS_TOKEN }}
          path: .deploy_git
          lfs: 'true'
        env:
          GIT_CURL_VERBOSE: '1'
          GIT_TRACE: '1'
      - name: setup github
        run: |
          git config --global user.name 'dimaslanjaka'
          git config --global user.email 'dimaslanjaka@gmail.com'
          git config core.eol lf
          git config core.autocrlf input
        working-directory: .deploy_git

      - name: set env
        id: set-env
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_ENV
      # - name: debug env
      #   run: |
      #     echo $HOME
      #     echo ${{ steps.set-env.outputs.GRADLE_USER_HOME }}
      #     echo $USER_HOME
        shell: bash
      - uses: actions/cache@v4
        with:
          path: |
            ./.cache
            ./tmp
            ./dist
            ./node_modules
            ./.yarn/caches
          key: node-${{ runner.os }}
          restore-keys: node-${{ runner.os }}
      # - name: cache release folder
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ./release
      #     key: gradle-release-apk
      #     restore-keys: |
      #       gradle-release-apk
      #       gradle-release-
      #       gradle-
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: actions/download-artifact@v4
        id: download
        with:
          name: github-pages
          # path: |
          #   release/
          #   changelog.md
          #   readme.md
      - name: Display structure
        run: |
          chmod 777 release
          ls -R --ignore=node_modules --ignore=.gradle --ignore=tmp --ignore=dist
        shell: bash
      #   working-directory: release
      # - name: debug downloaded paths
      #   run: echo ${{steps.download.outputs.download-path}}
      - run: corepack enable
      - name: install compiler
        run: yarn install

      - name: initialize compiler config
        run: |
          echo {} > _config.json
          echo [] > routes.json
          mkdir -p tmp
          mkdir -p tmp/meta
          mkdir -p tmp/static
          mkdir -p src/posts
        shell: bash
      - name: generate config
        run: gulp config

      - name: generate route
        run: gulp route

      - name: build pages
        run: yarn build

      - name: deploy pages
        run: gulp deploy
